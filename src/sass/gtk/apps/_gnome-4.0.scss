
//
// Nautilus
//
.nautilus-window {
  placesview {
    label { color: $text-secondary; }
  }

  .floating-bar {
    min-height: 32px;
    padding: 0;
    margin: $space-size;
    border-style: none;
    border-radius: $corner-radius;
    background-color: $primary;
    color: on($primary);
    box-shadow: $shadow-z3;

    button {
      margin: (32px - $small-size) / 2;
      color: on($primary);

      @extend %small-button;
    }
  }
}

#NautilusViewCell {
  clamp box {
    margin: 0;
    border-spacing: 0;
  }
}

#NautilusQueryEditor { // search entry
  > menubutton > button {
    min-width: 16px;
    min-height: 16px;
    margin: 0;
  }

  > text { margin: 0; }
}

#NautilusPathBar {
  background-color: $titlebar-fill;
  border-radius: $corner-radius;
  margin: $space-size 0;

  #NautilusPathButton {
    margin: 0 $space-size / 2;
    border-radius: $corner-radius;

    &.current-dir {
      color: $titlebar-text;

      &:hover, &:active {
        background: none;
        box-shadow: none;
      }
    }

    &:first-child { margin-left: 0; }
  }
}

//
// Gnome Control Center
//
window.dialog {
  > box > stack > box > box {
    > notebook.frame {
      border-width: 0 0 0 1px;
      border-radius: 0;
    }
  }
}

//
// Calculator
//

.history-view { background-color: $base; }

#displayitem {
  border-top: 1px solid $border;
}

.small .card {
  border-radius: 0;
  box-shadow: none;

  &.forecast-card {
    border-width: 1px 0;
  }

  &.display-container {
    border-width: 0 0 1px 0;
  }
}

leaflet {
  button.number-button {
    background-color: rgba($text, 0.1);

    &:hover {
      background-color: rgba($text, 0.2);
    }

    &:active {
      background-color: rgba($text, 0.3);
    }
  }
}

//
// Calendar
//

datechooser.view {
  button.flat.pill, button.circular.day {
    min-height: 24px;
    min-width: 24px;
    padding: $space-size;
  }
}

//
// Contacts
//

.contacts-contact-list list.navigation-sidebar {
  background: none;
}

//
// Gnome Software
//

flowboxchild > button.card {
  &.category-tile {
    padding: $space-size * 3.5;
    border: none;
    border-radius: $corner-radius;
  }

  &.category-tile-iconless {
    padding: $space-size * 1.5 $space-size * 2.5;
  }
}

app-context-bar {
  > box:not(:first-child) > button.flat {
    border-radius: 0;

    &:last-child {
      border-radius: 0 $corner-radius $corner-radius 0;
    }
  }

  > box:first-child > button.flat {
    border-radius: 0;

    &:first-child {
      border-radius: $corner-radius 0 0 $corner-radius;
    }
  }

  > box > button.flat {
    border-left-color: $border;
  }
}

carousel.card {
  border: none;
}

.context-tile-lozenge {
  min-height: 28px;
  min-width: 28px;
  padding: $space-size;

  &.grey {
    color: $text;
    background-color: $divider;
  }

  &.green, &.details-rating-0 {
    color: darken($success, 15%);
    background-color: rgba($success, 0.15);
  }

  &.blue,
  &.details-rating-5 {
    color: $blue-light;
    background-color: rgba($blue-light, 0.15);
  }

  &.yellow, &.details-rating-12 {
    color: darken($warning, 15%);
    background-color: rgba($warning, 0.15);
  }

  &.details-rating-15 {
    color: $orange-light;
    background-color: rgba($orange-light, .15);
  }

  &.red, &.details-rating-18 {
    color: darken($error, 15%);
    background-color: rgba($error, 0.15);
  }
}

screenshot-carousel box.frame.view {
  border-width: 1px 0;
  border-radius: 0;
}


/* Styling for specific category buttons. */
.category-tile.category-create {
  background: linear-gradient(180deg, #ce8cd7 0%, #2861c6 100%);
  color: white;

  &:hover {
    background: linear-gradient(180deg, shade(#ce8cd7, 1.07) 0%, shade(#2861c6, 1.1) 100%);
  }

  &:active {
    background: linear-gradient(180deg, shade(#ce8cd7, .95) 0%, shade(#2861c6, .95) 100%);
  }
}

.category-tile.category-develop {
  background: #5e5c64;
  color: white;

  &:hover {
    background: shade(#5e5c64, 1.2);
  }

  &:active {
    background-color: shade(#5e5c64, .95);
  }
}

.category-tile.category-learn {
  background: linear-gradient(180deg, #2ec27e 30%, #27a66c 100%);
  color: white;

  &:hover {
    background: linear-gradient(180deg, shade(#2ec27e, 1.06) 30%, shade(#27a66c, 1.06) 100%);
  }

  &:active {
    background: linear-gradient(180deg, shade(#2ec27e, .95) 30%, shade(#27a66c, .95) 100%);
  }
}

.category-tile.category-play {
  background: linear-gradient(75deg, #f9e2a7 0%, #eb5ec3 50%, #6d53e0 100%);
  color: #393484;

  &:hover {
    background: linear-gradient(75deg, shade(#f9e2a7, 1.07) 0%, shade(#eb5ec3, 1.07) 50%, shade(#6d53e0, 1.07) 100%);
  }

  &:active {
    background: linear-gradient(75deg, shade(#f9e2a7, .97) 0%, shade(#eb5ec3, .95) 50%, shade(#6d53e0, 1.07) 100%);
  }
}

.category-tile.category-socialize {
  background: linear-gradient(90deg, #ef4e9b 0%, #f77466 100%);
  color: $text-secondary;

  &:hover {
    background: linear-gradient(90deg, shade(#ef4e9b, 1.08) 0%, shade(#f77466, 1.08) 100%);
  }

  &:active {
    background: linear-gradient(90deg, shade(#ef4e9b, .95) 0%, shade(#f77466, .95) 100%);
  }
}

.category-tile.category-work {
  padding: 1px; /* FIXME: work around https://gitlab.gnome.org/GNOME/gtk/-/issues/4324 */
  color: #1c71d8;
  background-color:#fdf8d7;
  background-image: linear-gradient($border 1px, transparent 1px),
           linear-gradient(90deg, $border 1px, transparent 1px);
  background-size: 10px 10px, 10px 10px;
  background-position: -1px -4px, center -1px;

  &:hover {
    background-color: lighten(#fdf8d7, 5%);
    background-image: linear-gradient($border 1px, transparent 1px),
             linear-gradient(90deg, $border 1px, transparent 1px);
  }

  &:active {
    background-color: darken(#fdf8d7, 5%);
    background-image: linear-gradient($border 1px, transparent 1px),
             linear-gradient(90deg, $border 1px, transparent 1px);
  }
}

// Leaflets
window > contents > leaflet { // Gnome control center
  > box > stack.background {
    background-color: transparent;
    background-image: linear-gradient(to bottom,
                                      transparent,
                                      transparent $large-size,
                                      $background $large-size,
                                      $background);
  }
}

//
// Builder
//

headerbar splitbutton {
  notification button {
    margin: 0;
    min-height: $small-size;
    min-width: $small-size;
    padding: 0;
  }
}

popover.background.global-search {
  > arrow, > contents { padding: 0; }
}

panelframeswitcher {
  padding: $space-size / 2;
}

.frameheader.header {
  min-height: $small-size;
  background-color: $base-alt;

  > button {
    border: none;
    margin: 0;
    padding: $space-size / 2;
  }

  tabbar.inline {
    > revealer > box {
      min-height: $small-size;

      .start-action {
        padding: 0;
        border: none;
      }

      .end-action {
        padding: 0;
        border-left: 1px solid $border;
      }

      tabbox {
        border: none;
        background: none;
      }
    }
  }
}

panelstatusbar {
  > menubutton > button,
  > paneltogglebutton button { border-radius: 0; }
}

// Setting window

.style-variant {
  padding: 0 $space-size * 2;

  button.toggle {
    padding: 0;

    &, &:hover, &:focus, &:active, &:checked {
      background: none;
      outline: none;
      border: none;
      box-shadow: none;
    }

    > stylevariantpreview > .wallpaper {
      border-radius: $corner-radius;
      outline-color: transparent;
      outline-width: 3px;
      outline-offset: $space-size / 2;
      outline-style: solid;
      box-shadow: none;
    }

    &:hover > stylevariantpreview > .wallpaper {
      outline-color: $fill;
    }

    &:active > stylevariantpreview > .wallpaper {
      outline-color: $track;
    }

    &:checked > stylevariantpreview > .wallpaper {
      outline-color: $primary;
    }
  }
}

//
// dialogs
//

window.dialog {
  > .dialog-vbox > box > scrolledwindow > viewport > widget {
    > list.boxed-list {
      border: none;
      border-radius: 0;

      > row {
        &:first-child, &:last-child { border-radius: 0; }
      }
    }
  }
}

window.aboutdialog {
  stack scrolledwindow.frame > {
    &, viewport.view {
      border-radius: $window-radius - $space-size;
    }
  }
}
